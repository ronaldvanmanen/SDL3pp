// SDL3++
//
// Copyright (C) 2025 Ronald van Manen <rvanmanen@gmail.com>
//
// This software is provided 'as-is', without any express or implied
// warranty.  In no event will the authors be held liable for any damages
// arising from the use of this software.
// 
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
// 1. The origin of this software must not be misrepresented; you must not
//    claim that you wrote the original software. If you use this software
//    in a product, an acknowledgment in the product documentation would be
//    appreciated but is not required.
// 2. Altered source versions must be plainly marked as such, and must not be
//    misrepresented as being the original software.
// 3. This notice may not be removed or altered from any source distribution.

#pragma once

#include <cstdint>

#include <SDL3/SDL_keycode.h>

namespace sdl3
{
    enum class key_code : std::uint32_t
    {
        unknown = SDLK_UNKNOWN,
    
        return1 = SDLK_RETURN,
        escape = SDLK_ESCAPE,
        backspace = SDLK_BACKSPACE,
        tab = SDLK_TAB,
        space = SDLK_SPACE,
        exclaim = SDLK_EXCLAIM,
        quotedbl = SDLK_DBLAPOSTROPHE,
        hash = SDLK_HASH,
        percent = SDLK_PERCENT,
        dollar = SDLK_DOLLAR,
        ampersand = SDLK_AMPERSAND,
        quote = SDLK_APOSTROPHE,
        leftparen = SDLK_LEFTPAREN,
        rightparen = SDLK_RIGHTPAREN,
        asterisk = SDLK_ASTERISK,
        plus = SDLK_PLUS,
        comma = SDLK_COMMA,
        minus = SDLK_MINUS,
        period = SDLK_PERIOD,
        slash = SDLK_SLASH,
        d0 = SDLK_0,
        d1 = SDLK_1,
        d2 = SDLK_2,
        d3 = SDLK_3,
        d4 = SDLK_4,
        d5 = SDLK_5,
        d6 = SDLK_6,
        d7 = SDLK_7,
        d8 = SDLK_8,
        d9 = SDLK_9,
        colon = SDLK_COLON,
        semicolon = SDLK_SEMICOLON,
        less = SDLK_LESS,
        equals = SDLK_EQUALS,
        greater = SDLK_GREATER,
        question = SDLK_QUESTION,
        at = SDLK_AT,
    
        left_bracket = SDLK_LEFTBRACKET,
        backslash = SDLK_BACKSLASH,
        right_bracket = SDLK_RIGHTBRACKET,
        caret = SDLK_CARET,
        underscore = SDLK_UNDERSCORE,
        backquote = SDLK_GRAVE,
        a = SDLK_A,
        b = SDLK_B,
        c = SDLK_C,
        d = SDLK_D,
        e = SDLK_E,
        f = SDLK_F,
        g = SDLK_G,
        h = SDLK_H,
        i = SDLK_I,
        j = SDLK_J,
        k = SDLK_K,
        l = SDLK_L,
        m = SDLK_M,
        n = SDLK_N,
        o = SDLK_O,
        p = SDLK_P,
        q = SDLK_Q,
        r = SDLK_R,
        s = SDLK_S,
        t = SDLK_T,
        u = SDLK_U,
        v = SDLK_V,
        w = SDLK_W,
        x = SDLK_X,
        y = SDLK_Y,
        z = SDLK_Z,
    
        caps_lock = SDLK_CAPSLOCK,
    
        f1 = SDLK_F1,
        f2 = SDLK_F2,
        f3 = SDLK_F3,
        f4 = SDLK_F4,
        f5 = SDLK_F5,
        f6 = SDLK_F6,
        f7 = SDLK_F7,
        f8 = SDLK_F8,
        f9 = SDLK_F9,
        f10 = SDLK_F10,
        f11 = SDLK_F11,
        f12 = SDLK_F12,
    
        print_screen = SDLK_PRINTSCREEN,
        scroll_lock = SDLK_SCROLLLOCK,
        pause = SDLK_PAUSE,
        insert = SDLK_INSERT,
        home = SDLK_HOME,
        page_up = SDLK_PAGEUP,
        del = SDLK_DELETE,
        end = SDLK_END,
        page_down = SDLK_PAGEDOWN,
        right = SDLK_RIGHT,
        left = SDLK_LEFT,
        down = SDLK_DOWN,
        up = SDLK_UP,
    
        numlock_clear = SDLK_NUMLOCKCLEAR,
        keypad_divide = SDLK_KP_DIVIDE,
        keypad_multiply = SDLK_KP_MULTIPLY,
        keypad_minus = SDLK_KP_MINUS,
        keypad_plus = SDLK_KP_PLUS,
        keypad_enter = SDLK_KP_ENTER,
        keypad_1 = SDLK_KP_1,
        keypad_2 = SDLK_KP_2,
        keypad_3 = SDLK_KP_3,
        keypad_4 = SDLK_KP_4,
        keypad_5 = SDLK_KP_5,
        keypad_6 = SDLK_KP_6,
        keypad_7 = SDLK_KP_7,
        keypad_8 = SDLK_KP_8,
        keypad_9 = SDLK_KP_9,
        keypad_0 = SDLK_KP_0,
        keypad_period = SDLK_KP_PERIOD,
    
        application = SDLK_APPLICATION,
        power = SDLK_POWER,
        keypad_equals = SDLK_KP_EQUALS,
        f13 = SDLK_F13,
        f14 = SDLK_F14,
        f15 = SDLK_F15,
        f16 = SDLK_F16,
        f17 = SDLK_F17,
        f18 = SDLK_F18,
        f19 = SDLK_F19,
        f20 = SDLK_F20,
        f21 = SDLK_F21,
        f22 = SDLK_F22,
        f23 = SDLK_F23,
        f24 = SDLK_F24,
        execute = SDLK_EXECUTE,
        help = SDLK_HELP,
        menu = SDLK_MENU,
        select = SDLK_SELECT,
        stop = SDLK_STOP,
        again = SDLK_AGAIN,
        undo = SDLK_UNDO,
        cut = SDLK_CUT,
        copy = SDLK_COPY,
        paste = SDLK_PASTE,
        find = SDLK_FIND,
        mute = SDLK_MUTE,
        volume_up = SDLK_VOLUMEUP,
        volume_down = SDLK_VOLUMEDOWN,
        keypad_comma = SDLK_KP_COMMA,
        keypad_equals_as400 = SDLK_KP_EQUALSAS400,
    
        alt_erase = SDLK_ALTERASE,
        sys_req = SDLK_SYSREQ,
        cancel = SDLK_CANCEL,
        clear = SDLK_CLEAR,
        prior = SDLK_PRIOR,
        return2 = SDLK_RETURN2,
        separator = SDLK_SEPARATOR,
        out = SDLK_OUT,
        oper = SDLK_OPER,
        clear_again = SDLK_CLEARAGAIN,
        crsel = SDLK_CRSEL,
        exsel = SDLK_EXSEL,
    
        keypad_00 = SDLK_KP_00,
        keypad_000 = SDLK_KP_000,
        thousands_separator = SDLK_THOUSANDSSEPARATOR,
        decimal_separator = SDLK_DECIMALSEPARATOR,
        currency_unit = SDLK_CURRENCYUNIT,
        currency_subunit = SDLK_CURRENCYSUBUNIT,
        keypad_left_paren = SDLK_KP_LEFTPAREN,
        keypad_right_paren = SDLK_KP_RIGHTPAREN,
        keypad_left_brace = SDLK_KP_LEFTBRACE,
        keypad_right_brace = SDLK_KP_RIGHTBRACE,
        keypad_tab = SDLK_KP_TAB,
        keypad_backspace = SDLK_KP_BACKSPACE,
        keypad_a = SDLK_KP_A,
        keypad_b = SDLK_KP_B,
        keypad_c = SDLK_KP_C,
        keypad_d = SDLK_KP_D,
        keypad_e = SDLK_KP_E,
        keypad_f = SDLK_KP_F,
        keypad_xor = SDLK_KP_XOR,
        keypad_power = SDLK_KP_POWER,
        keypad_percent = SDLK_KP_PERCENT,
        keypad_less = SDLK_KP_LESS,
        keypad_greater = SDLK_KP_GREATER,
        keypad_ampersand = SDLK_KP_AMPERSAND,
        keypad_dblampersand = SDLK_KP_DBLAMPERSAND,
        keypad_verticalbar = SDLK_KP_VERTICALBAR,
        keypad_dblverticalbar = SDLK_KP_DBLVERTICALBAR,
        keypad_colon = SDLK_KP_COLON,
        keypad_hash = SDLK_KP_HASH,
        keypad_space = SDLK_KP_SPACE,
        keypad_at = SDLK_KP_AT,
        keypad_exclam = SDLK_KP_EXCLAM,
        keypad_memstore = SDLK_KP_MEMSTORE,
        keypad_memrecall = SDLK_KP_MEMRECALL,
        keypad_memclear = SDLK_KP_MEMCLEAR,
        keypad_memadd = SDLK_KP_MEMADD,
        keypad_memsubtract = SDLK_KP_MEMSUBTRACT,
        keypad_memmultiply = SDLK_KP_MEMMULTIPLY,
        keypad_memdivide = SDLK_KP_MEMDIVIDE,
        keypad_plusminus = SDLK_KP_PLUSMINUS,
        keypad_clear = SDLK_KP_CLEAR,
        keypad_clearentry = SDLK_KP_CLEARENTRY,
        keypad_binary = SDLK_KP_BINARY,
        keypad_octal = SDLK_KP_OCTAL,
        keypad_decimal = SDLK_KP_DECIMAL,
        keypad_hexadecimal = SDLK_KP_HEXADECIMAL,
    
        left_ctrl = SDLK_LCTRL,
        left_shift = SDLK_LSHIFT,
        left_alt = SDLK_LALT,
        left_gui = SDLK_LGUI,
        right_ctrl = SDLK_RCTRL,
        right_shift = SDLK_RSHIFT,
        right_alt = SDLK_RALT,
        right_gui = SDLK_RGUI,
    
        mode = SDLK_MODE,
    
        audio_next = SDLK_MEDIA_NEXT_TRACK,
        audio_prev = SDLK_MEDIA_PREVIOUS_TRACK,
        audio_stop = SDLK_MEDIA_STOP,
        audio_play = SDLK_MEDIA_PLAY,
        audio_mute = SDLK_MUTE,
        media_select = SDLK_MEDIA_SELECT,
        // www = SDLK_WWW,
        // mail = SDLK_MAIL,
        // calculator = SDLK_CALCULATOR,
        // computer = SDLK_COMPUTER,
        ac_search = SDLK_AC_SEARCH,
        ac_home = SDLK_AC_HOME,
        ac_back = SDLK_AC_BACK,
        ac_forward = SDLK_AC_FORWARD,
        ac_stop = SDLK_AC_STOP,
        ac_refresh = SDLK_AC_REFRESH,
        ac_bookmarks = SDLK_AC_BOOKMARKS,
        // brightness_down = SDLK_BRIGHTNESSDOWN,
        // brightness_up = SDLK_BRIGHTNESSUP,
        // display_switch = SDLK_DISPLAYSWITCH,
        // keyboard_backlight_toggle = SDLK_KBDILLUMTOGGLE,
        // keyboard_backlight_down = SDLK_KBDILLUMDOWN,
        // keyboard_backlight_up = SDLK_KBDILLUMUP,
        eject = SDLK_MEDIA_EJECT,
        sleep = SDLK_SLEEP,
        // app1 = SDLK_APP1,
        // app2 = SDLK_APP2,
    
        audio_rewind = SDLK_MEDIA_REWIND,
        audio_fastforward = SDLK_MEDIA_FAST_FORWARD,
    
        soft_left = SDLK_SOFTLEFT,
        soft_right = SDLK_SOFTRIGHT,
        call = SDLK_CALL,
        end_call = SDLK_ENDCALL
    };
}
